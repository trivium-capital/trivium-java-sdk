/*
 * trivium-cash
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package tech.triviumcapital.clients.java.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * IndividualDetails
 */
@JsonPropertyOrder({
  IndividualDetails.JSON_PROPERTY_IDENTITY_NUMBER,
  IndividualDetails.JSON_PROPERTY_FULL_NAME,
  IndividualDetails.JSON_PROPERTY_NATIONALITY,
  IndividualDetails.JSON_PROPERTY_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.8.0")
public class IndividualDetails implements UserDetails {
  public static final String JSON_PROPERTY_IDENTITY_NUMBER = "identityNumber";
  private String identityNumber;

  public static final String JSON_PROPERTY_FULL_NAME = "fullName";
  private String fullName;

  public static final String JSON_PROPERTY_NATIONALITY = "nationality";
  private String nationality;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public IndividualDetails() {
  }

  /**
   * Constructor with all args parameters
   */
  public IndividualDetails(@JsonProperty(JSON_PROPERTY_IDENTITY_NUMBER) String identityNumber, @JsonProperty(JSON_PROPERTY_FULL_NAME) String fullName, @JsonProperty(JSON_PROPERTY_NATIONALITY) String nationality, @JsonProperty(JSON_PROPERTY_TYPE) String type) {
    this.identityNumber = identityNumber;
    this.fullName = fullName;
    this.nationality = nationality;
    this.type = type;
  }

  public IndividualDetails identityNumber(String identityNumber) {
    
    this.identityNumber = identityNumber;
    return this;
  }

  /**
   * Get identityNumber
   * @return identityNumber
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IDENTITY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIdentityNumber() {
    return identityNumber;
  }


  @JsonProperty(JSON_PROPERTY_IDENTITY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIdentityNumber(String identityNumber) {
    this.identityNumber = identityNumber;
  }

  public IndividualDetails fullName(String fullName) {
    
    this.fullName = fullName;
    return this;
  }

  /**
   * Get fullName
   * @return fullName
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FULL_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFullName() {
    return fullName;
  }


  @JsonProperty(JSON_PROPERTY_FULL_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFullName(String fullName) {
    this.fullName = fullName;
  }

  public IndividualDetails nationality(String nationality) {
    
    this.nationality = nationality;
    return this;
  }

  /**
   * Get nationality
   * @return nationality
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NATIONALITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getNationality() {
    return nationality;
  }


  @JsonProperty(JSON_PROPERTY_NATIONALITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNationality(String nationality) {
    this.nationality = nationality;
  }

  public IndividualDetails type(String type) {
    
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IndividualDetails individualDetails = (IndividualDetails) o;
    return Objects.equals(this.identityNumber, individualDetails.identityNumber) &&
        Objects.equals(this.fullName, individualDetails.fullName) &&
        Objects.equals(this.nationality, individualDetails.nationality) &&
        Objects.equals(this.type, individualDetails.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identityNumber, fullName, nationality, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IndividualDetails {\n");
    sb.append("    identityNumber: ").append(toIndentedString(identityNumber)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  public static class Builder {

    private IndividualDetails instance;

    public Builder() {
      this(new IndividualDetails());
    }

    protected Builder(IndividualDetails instance) {
      this.instance = instance;
    }

    public IndividualDetails.Builder identityNumber(String identityNumber) {
      this.instance.identityNumber = identityNumber;
      return this;
    }
    public IndividualDetails.Builder fullName(String fullName) {
      this.instance.fullName = fullName;
      return this;
    }
    public IndividualDetails.Builder nationality(String nationality) {
      this.instance.nationality = nationality;
      return this;
    }
    public IndividualDetails.Builder type(String type) {
      this.instance.type = type;
      return this;
    }


    /**
    * returns a built IndividualDetails instance.
    *
    * The builder is not reusable.
    */
    public IndividualDetails build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static IndividualDetails.Builder builder() {
    return new IndividualDetails.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public IndividualDetails.Builder toBuilder() {
    return new IndividualDetails.Builder()
      .identityNumber(getIdentityNumber())
      .fullName(getFullName())
      .nationality(getNationality())
      .type(getType());
  }


}

