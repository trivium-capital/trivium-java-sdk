/*
 * trivium-cash
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package tech.triviumcapital.clients.java.api;

import tech.triviumcapital.clients.java.ApiException;
import tech.triviumcapital.clients.java.model.Account;
import tech.triviumcapital.clients.java.model.BadRequest;
import tech.triviumcapital.clients.java.model.Balances;
import tech.triviumcapital.clients.java.model.CreateAccountRequest;
import tech.triviumcapital.clients.java.model.DepositRequest;
import tech.triviumcapital.clients.java.model.DepositResponse;
import tech.triviumcapital.clients.java.model.Rates;
import tech.triviumcapital.clients.java.model.RedemptionInfo;
import tech.triviumcapital.clients.java.model.RedemptionRequest;
import tech.triviumcapital.clients.java.model.RedemptionResponse;
import tech.triviumcapital.clients.java.model.Transactions;
import java.util.UUID;
import tech.triviumcapital.clients.java.model.Unauthorized;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CashApi
 */
@Disabled
public class CashApiTest {

    private final CashApi api = new CashApi();

    /**
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getApiV1CashAccountAccountidTest() throws ApiException {
        UUID accountId = null;
        Account response = api.getApiV1CashAccountAccountid(accountId);

        // TODO: test validations
    }
    /**
     * Returns cash accounts for given user id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getApiV1CashAccountUserUseridTest() throws ApiException {
        UUID userId = null;
        List<Account> response = api.getApiV1CashAccountUserUserid(userId);

        // TODO: test validations
    }
    /**
     * Returns balance according to currency
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getApiV1CashBalanceUseridTest() throws ApiException {
        UUID userId = null;
        Balances response = api.getApiV1CashBalanceUserid(userId);

        // TODO: test validations
    }
    /**
     * Returns rates according to currency in decimal format. Multiply by 100 for percentage points.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getApiV1CashRatesTest() throws ApiException {
        Rates response = api.getApiV1CashRates(null);

        // TODO: test validations
    }
    /**
     * Get list of deposit and transaction requests
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getApiV1CashTransactionsAccountidTest() throws ApiException {
        UUID accountId = null;
        Integer limit = null;
        Integer offset = null;
        Boolean paginate = null;
        Transactions response = api.getApiV1CashTransactionsAccountid(accountId, limit, offset, paginate);

        // TODO: test validations
    }
    /**
     * Get redemption information
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getApiV1CashTransactionsRedemptionInfoTest() throws ApiException {
        RedemptionInfo response = api.getApiV1CashTransactionsRedemptionInfo();

        // TODO: test validations
    }
    /**
     * Create cash account
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postApiV1CashAccountTest() throws ApiException {
        CreateAccountRequest createAccountRequest = null;
        Account response = api.postApiV1CashAccount(createAccountRequest);

        // TODO: test validations
    }
    /**
     * Create deposit request
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postApiV1CashRequestDepositAccountidTest() throws ApiException {
        UUID accountId = null;
        DepositRequest depositRequest = null;
        String xDeduplicationId = null;
        DepositResponse response = api.postApiV1CashRequestDepositAccountid(accountId, depositRequest, xDeduplicationId);

        // TODO: test validations
    }
    /**
     * Create redemption request
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postApiV1CashRequestRedemptionAccountidTest() throws ApiException {
        UUID accountId = null;
        RedemptionRequest redemptionRequest = null;
        String xDeduplicationId = null;
        RedemptionResponse response = api.postApiV1CashRequestRedemptionAccountid(accountId, redemptionRequest, xDeduplicationId);

        // TODO: test validations
    }
}
